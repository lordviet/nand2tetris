/** Implements Sword */
class Sword {

    field int x, y;

    /** Constructs a new Sword sprite. */
    constructor Sword new(int Ax, int Ay) {
        let x = Ax;
        let y = Ay;
        do draw();
        return this;
    }

    /** Disposes Sword. */
    method void dispose(){
        do Memory.deAlloc(this);
        return;
    }

    method int getX(){
        return x;
    }

    method int getY(){
        return y;
    }

   /** Draws default Sword on the screen */
   method void draw() {
       var int memAddress;
       let memAddress = 16384 + (x / 16) + (y * 32);
       do Memory.poke(memAddress + 0, 0);
       do Memory.poke(memAddress + 32, 0);
       do Memory.poke(memAddress + 64, 0);
       do Memory.poke(memAddress + 96, 0);
       do Memory.poke(memAddress + 128, 0);
       do Memory.poke(memAddress + 160, 0);
       do Memory.poke(memAddress + 192, 0);
       do Memory.poke(memAddress + 224, 0);
       do Memory.poke(memAddress + 256, 128);
       do Memory.poke(memAddress + 288, 128);
       do Memory.poke(memAddress + 320, 128);
       do Memory.poke(memAddress + 352, 128);
       do Memory.poke(memAddress + 384, 128);
       do Memory.poke(memAddress + 416, 448);
       do Memory.poke(memAddress + 448, 128);
       do Memory.poke(memAddress + 480, 128);
       return;
   }

   /** Erases Sword from the screen. */
   method void erase() {
       var int memAddress;
       let memAddress = 16384 + (x / 16) + (y * 32);

       do Memory.poke(memAddress + 0, 0);
       do Memory.poke(memAddress + 32, 0);
       do Memory.poke(memAddress + 64, 0);
       do Memory.poke(memAddress + 96, 0);
       do Memory.poke(memAddress + 128, 0);
       do Memory.poke(memAddress + 160, 0);
       do Memory.poke(memAddress + 192, 0);
       do Memory.poke(memAddress + 224, 0);
       do Memory.poke(memAddress + 256, 0);
       do Memory.poke(memAddress + 288, 0);
       do Memory.poke(memAddress + 320, 0);
       do Memory.poke(memAddress + 352, 0);
       do Memory.poke(memAddress + 384, 0);
       do Memory.poke(memAddress + 416, 0);
       do Memory.poke(memAddress + 448, 0);
       do Memory.poke(memAddress + 480, 0);

       return;
   }
}