/** Implements the character of Link. */
class Link {

   field int x, y; // screen location of the Link's top-left corner

   /** Constructs a new Link sprite with a given location. */
   constructor Link new(int Ax, int Ay) {
      let x = Ax;
      let y = Ay;
      do draw();
      return this;
   }

   /** Disposes Link. */
   method void dispose() {
      do Memory.deAlloc(this);
      return;
   }

   /** Draws Link on the screen. */
   method void draw() {
      var int memAddress;
	    // let memAddress = 16384+location;
      let memAddress = 16384+(x/16)+(y*32);
      do Memory.poke(memAddress+0, 0);
      do Memory.poke(memAddress+32, 2016);
      do Memory.poke(memAddress+64, 4080);
      do Memory.poke(memAddress+96, 12276);
      do Memory.poke(memAddress+128, 12276);
      do Memory.poke(memAddress+160, 16380);
      do Memory.poke(memAddress+192, 15804);
      do Memory.poke(memAddress+224, 8184);
      do Memory.poke(memAddress+256, 3696);
      do Memory.poke(memAddress+288, 2016);
      do Memory.poke(memAddress+320, 8184);
      do Memory.poke(memAddress+352, 15996);
      do Memory.poke(memAddress+384, 11316);
      do Memory.poke(memAddress+416, 11892);
      do Memory.poke(memAddress+448, 4080);
      do Memory.poke(memAddress+480, 1632);
      return;
    }

    // method void draw() {
    //     var int memAddress;
    //     let memAddress = 16384 + (x/16) + (y*32);
    //     do Memory.poke(memAddress+0, 384);
    //     do Memory.poke(memAddress+32, 384);
    //     do Memory.poke(memAddress+64, 384);
    //     do Memory.poke(memAddress+96, 1440);
    //     do Memory.poke(memAddress+128, 1440);
    //     do Memory.poke(memAddress+160, -31327);
    //     do Memory.poke(memAddress+192, -31807);
    //     do Memory.poke(memAddress+224, -32383);
    //     do Memory.poke(memAddress+256, -7801);
    //     do Memory.poke(memAddress+288, -26215);
    //     do Memory.poke(memAddress+320, 2016);
    //     do Memory.poke(memAddress+352, 2016);
    //     do Memory.poke(memAddress+384, -24583);
    //     do Memory.poke(memAddress+416, -7609);
    //     do Memory.poke(memAddress+448, -31135);
    //     do Memory.poke(memAddress+480, -31711);
    //     return;
    // }

   /** Erases Link from the screen. */
   method void erase() {
      var int memAddress;
      let memAddress = 16384+(x/16)+(y*32);
      do Memory.poke(memAddress+0, 0);
      do Memory.poke(memAddress+32, 0);
      do Memory.poke(memAddress+64, 0);
      do Memory.poke(memAddress+96, 0);
      do Memory.poke(memAddress+128, 0);
      do Memory.poke(memAddress+160, 0);
      do Memory.poke(memAddress+192, 0);
      do Memory.poke(memAddress+224, 0);
      do Memory.poke(memAddress+256, 0);
      do Memory.poke(memAddress+288, 0);
      do Memory.poke(memAddress+320, 0);
      do Memory.poke(memAddress+352, 0);
      do Memory.poke(memAddress+384, 0);
      do Memory.poke(memAddress+416, 0);
      do Memory.poke(memAddress+448, 0);
      do Memory.poke(memAddress+480, 0);
      return;
    }

   /** Moves Link up by 2 pixels. */
   method void moveUp() {
      if (y > 1) {
         do erase();
         let y = y - 2;
         do draw();
      }
      return;
   }

   /** Moves Link down by 2 pixels. */
   method void moveDown() {
      if (y < 240) {
         do erase();
         let y = y + 2;
         do draw();
      }
      return;
   }

   /** Moves Link left by 2 pixels. */
   method void moveLeft() {
      if (x > 1) {
         do erase();
         let x = x - 2;
         do draw();
      }
      return;
    }

   /** Moves Link right by 2 pixels. */
   method void moveRight() {
      if (x < 510) {
         do erase();
         let x = x + 2;
         do draw();
      }
      return;
    }
}
