function ZeldaGame.new 0
push constant 10
call Memory.alloc 1
pop pointer 0
push constant 248
push constant 214
push constant 3
push constant 0
call Link.new 4
pop this 0
push constant 495
push constant 20
push constant 3
call Moblin.new 3
pop this 1
push constant 300
push constant 100
push constant 0
not
call Sword.new 3
pop this 2
call Wall.new 0
pop this 3
call Gate.new 0
pop this 4
push constant 12345
call RandomNumberGenerator.new 1
pop this 5
push constant 1
pop this 6
push constant 0
pop this 7
push constant 0
pop this 8
push constant 0
pop this 9
push pointer 0
return
function ZeldaGame.restartGame 0
push argument 0
pop pointer 0
push this 0
call Link.dispose 1
pop temp 0
push this 0
call Link.erase 1
pop temp 0
push constant 248
push constant 214
push constant 3
push constant 0
call Link.new 4
pop this 0
push this 1
call Moblin.dispose 1
pop temp 0
push this 1
call Moblin.erase 1
pop temp 0
push constant 495
push constant 20
push constant 3
call Moblin.new 3
pop this 1
push this 2
call Sword.dispose 1
pop temp 0
push this 2
call Sword.erase 1
pop temp 0
push constant 300
push constant 100
push constant 0
not
call Sword.new 3
pop this 2
push this 3
call Wall.dispose 1
pop temp 0
call Wall.new 0
pop this 3
push this 4
push constant 0
call Gate.setIsOpen 2
pop temp 0
push constant 1
pop this 6
push constant 0
pop this 7
push constant 0
pop this 8
push constant 0
pop this 9
push constant 0
return
function ZeldaGame.dispose 0
push argument 0
pop pointer 0
push this 0
call Link.dispose 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function ZeldaGame.moveLink 2
push argument 0
pop pointer 0
push this 0
call Link.getIsDead 1
pop local 0
push this 0
call Link.getCooldownTimer 1
pop local 1
push local 0
push constant 0
not
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
pop this 8
push constant 0
return
label IF_FALSE0
push this 0
call Link.getIsInvincible 1
push constant 0
not
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 1
push constant 1
sub
pop local 1
push this 0
push local 1
call Link.setCooldownTimer 2
pop temp 0
push local 1
push constant 0
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 0
push constant 0
call Link.setIsInvincible 2
pop temp 0
push this 0
push constant 10000
call Link.setCooldownTimer 2
pop temp 0
label IF_FALSE2
label IF_FALSE1
push this 7
push constant 1
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 0
call Link.moveUp 1
pop temp 0
label IF_FALSE3
push this 7
push constant 2
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push this 0
call Link.moveDown 1
pop temp 0
label IF_FALSE4
push this 7
push constant 3
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push this 0
call Link.moveLeft 1
pop temp 0
label IF_FALSE5
push this 7
push constant 4
eq
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push this 0
call Link.moveRight 1
pop temp 0
label IF_FALSE6
push pointer 0
call ZeldaGame.checkIfLinkHasPickedUpASword 1
pop temp 0
push this 0
call Link.getIsInvincible 1
push constant 0
not
eq
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push this 0
push constant 0
call Link.setIsInvincible 2
pop temp 0
label IF_FALSE7
push pointer 0
call ZeldaGame.checkIfLinkHasCollidedWithMoblin 1
pop temp 0
push pointer 0
call ZeldaGame.spawnSwordIfLinkIsSwordless 1
pop temp 0
push constant 5
call Sys.wait 1
pop temp 0
push constant 0
return
function ZeldaGame.moveMoblin 5
push argument 0
pop pointer 0
push this 1
call Moblin.getIsDead 1
pop local 0
push constant 220
pop local 3
push constant 220
pop local 4
push local 0
push constant 0
not
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 6
push constant 1
sub
pop this 6
push this 6
push constant 0
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 1
call Moblin.nullify 1
pop temp 0
push this 4
push constant 0
not
call Gate.setIsOpen 2
pop temp 0
push constant 0
not
pop this 9
push constant 0
return
label IF_FALSE1
push this 1
push this 5
push local 3
call RandomNumberGenerator.nextInt 2
push this 5
push local 4
call RandomNumberGenerator.nextInt 2
call Moblin.respawn 3
pop temp 0
label IF_FALSE0
push this 0
call Link.getX 1
pop local 1
push this 0
call Link.getY 1
pop local 2
push this 1
push local 1
push local 2
call Moblin.updatePlayerPosition 3
pop temp 0
push this 1
call Moblin.moveTowardsPlayer 1
pop temp 0
push constant 5
call Sys.wait 1
pop temp 0
push constant 0
return
function ZeldaGame.checkIfLinkHasPickedUpASword 14
push argument 0
pop pointer 0
push this 0
call Link.getX 1
pop local 0
push this 2
call Sword.getX 1
pop local 1
push this 0
call Link.getY 1
pop local 2
push this 2
call Sword.getY 1
pop local 3
push constant 16
pop local 4
push constant 16
pop local 5
push local 0
pop local 6
push local 0
push local 4
add
pop local 7
push local 2
pop local 8
push local 2
push local 5
add
pop local 9
push local 1
pop local 10
push local 1
push local 4
add
pop local 11
push local 3
pop local 12
push local 3
push local 5
add
pop local 13
push local 7
push local 10
gt
push local 6
push local 11
lt
and
push local 9
push local 12
gt
and
push local 8
push local 13
lt
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 0
call Link.pickUpSword 1
pop temp 0
push this 2
call Sword.erase 1
pop temp 0
label IF_FALSE0
push constant 0
return
function ZeldaGame.checkIfLinkHasCollidedWithMoblin 14
push argument 0
pop pointer 0
push this 0
call Link.getX 1
pop local 0
push this 1
call Moblin.getX 1
pop local 1
push this 0
call Link.getY 1
pop local 2
push this 1
call Moblin.getY 1
pop local 3
push constant 16
pop local 4
push constant 16
pop local 5
push local 0
pop local 6
push local 0
push local 4
add
pop local 7
push local 2
pop local 8
push local 2
push local 5
add
pop local 9
push local 1
pop local 10
push local 1
push local 4
add
pop local 11
push local 3
pop local 12
push local 3
push local 5
add
pop local 13
push local 7
push local 10
gt
push local 6
push local 11
lt
and
push local 9
push local 12
gt
and
push local 8
push local 13
lt
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 0
call Link.takeDamage 1
pop temp 0
push this 0
push constant 0
not
call Link.setIsInvincible 2
pop temp 0
label IF_FALSE0
push constant 0
return
function ZeldaGame.spawnSwordIfLinkIsSwordless 8
push argument 0
pop pointer 0
push this 0
call Link.getHasSword 1
pop local 0
push this 2
call Sword.getIsActive 1
pop local 1
push local 0
push constant 0
not
eq
push local 1
push constant 0
not
eq
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push constant 16
pop local 2
push constant 16
pop local 3
push constant 240
pop local 4
push constant 200
pop local 5
push this 5
push local 4
push local 2
sub
call RandomNumberGenerator.nextInt 2
push local 2
add
pop local 6
push this 5
push local 5
push local 3
sub
call RandomNumberGenerator.nextInt 2
push local 3
add
pop local 7
push this 2
push local 6
call Sword.setX 2
pop temp 0
push this 2
push local 7
call Sword.setY 2
pop temp 0
push this 2
call Sword.draw 1
pop temp 0
push constant 0
return
function ZeldaGame.performAttack 7
push argument 0
pop pointer 0
push this 0
call Link.getX 1
pop local 0
push this 0
call Link.getY 1
pop local 2
push this 2
call Sword.getX 1
pop local 1
push this 2
call Sword.getY 1
pop local 3
push this 0
call Link.getHasSword 1
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push this 0
call Link.attack 1
pop temp 0
push this 2
push local 0
call Sword.setX 2
pop temp 0
push this 2
push local 2
call Sword.setY 2
pop temp 0
push this 2
push constant 0
not
call Sword.setIsFlying 2
pop temp 0
push this 2
push this 7
call Sword.setFlyingDirection 2
pop temp 0
push this 2
call Sword.getFlyingDirection 1
pop local 5
label WHILE_EXP0
push local 5
push constant 0
eq
not
not
if-goto WHILE_END0
push this 7
push constant 1
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 2
call Sword.moveUp 1
pop temp 0
label IF_FALSE1
push this 7
push constant 2
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 2
call Sword.moveDown 1
pop temp 0
label IF_FALSE2
push this 7
push constant 3
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 2
call Sword.moveLeft 1
pop temp 0
label IF_FALSE3
push this 7
push constant 4
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push this 2
call Sword.moveRight 1
pop temp 0
label IF_FALSE4
push pointer 0
push this 2
call Sword.getX 1
push this 2
call Sword.getY 1
call ZeldaGame.checkMoblinCollision 3
pop local 6
push local 6
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push this 1
call Moblin.takeDamage 1
pop temp 0
push this 2
call Sword.erase 1
pop temp 0
push this 2
push constant 0
call Sword.setFlyingDirection 2
pop temp 0
push this 2
call Sword.getFlyingDirection 1
pop local 5
label IF_FALSE5
push this 2
call Sword.getX 1
push constant 494
eq
push this 2
call Sword.getX 1
push constant 16
eq
or
push this 2
call Sword.getY 1
push constant 224
eq
or
push this 2
call Sword.getY 1
push constant 16
eq
or
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push constant 5
call Sys.wait 1
pop temp 0
push this 2
call Sword.erase 1
pop temp 0
push this 2
push constant 0
call Sword.setFlyingDirection 2
pop temp 0
push this 2
call Sword.getFlyingDirection 1
pop local 5
label IF_FALSE6
goto WHILE_EXP0
label WHILE_END0
push this 2
push local 1
call Sword.setX 2
pop temp 0
push this 2
push local 3
call Sword.setY 2
pop temp 0
push constant 0
return
function ZeldaGame.checkMoblinCollision 8
push argument 0
pop pointer 0
push constant 32
pop local 2
push constant 32
pop local 3
push this 1
call Moblin.getX 1
pop local 0
push this 1
call Moblin.getY 1
pop local 1
push local 0
pop local 4
push local 0
push local 2
add
pop local 5
push local 1
pop local 6
push local 1
push local 3
add
pop local 7
push argument 1
push local 5
lt
push argument 1
push constant 16
add
push local 4
gt
and
push argument 2
push local 7
lt
and
push argument 2
push constant 16
add
push local 6
gt
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
return
label IF_FALSE0
push constant 0
return
function ZeldaGame.run 2
push argument 0
pop pointer 0
push constant 0
pop local 1
label WHILE_EXP0
push local 1
not
not
if-goto WHILE_END0
label WHILE_EXP1
push local 0
push constant 0
eq
not
if-goto WHILE_END1
call Keyboard.keyPressed 0
pop local 0
push pointer 0
call ZeldaGame.moveLink 1
pop temp 0
push this 6
push constant 0
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
call ZeldaGame.moveMoblin 1
pop temp 0
label IF_FALSE0
goto WHILE_EXP1
label WHILE_END1
push local 0
push constant 81
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
not
pop local 1
label IF_FALSE1
push local 0
push constant 82
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push pointer 0
call ZeldaGame.restartGame 1
pop temp 0
label IF_FALSE2
push local 0
push constant 32
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push pointer 0
call ZeldaGame.performAttack 1
pop temp 0
label IF_FALSE3
push local 0
push constant 131
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push constant 1
pop this 7
label IF_FALSE4
push local 0
push constant 133
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push constant 2
pop this 7
label IF_FALSE5
push local 0
push constant 130
eq
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push constant 3
pop this 7
label IF_FALSE6
push local 0
push constant 132
eq
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push constant 4
pop this 7
label IF_FALSE7
label WHILE_EXP2
push local 0
push constant 0
eq
not
not
if-goto WHILE_END2
call Keyboard.keyPressed 0
pop local 0
push pointer 0
call ZeldaGame.moveLink 1
pop temp 0
goto WHILE_EXP2
label WHILE_END2
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
