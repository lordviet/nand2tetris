// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:
    Register(in[0..15]=false, load=load, out=tmpReg1);
    Register(in[0..15]=false, load=load, out=tmpReg2);
    Register(in[0..15]=false, load=load, out=tmpReg3);
    Register(in[0..15]=false, load=load, out=tmpReg4);
    Register(in[0..15]=false, load=load, out=tmpReg5);
    Register(in[0..15]=false, load=load, out=tmpReg6);
    Register(in[0..15]=false, load=load, out=tmpReg7);
    Register(in[0..15]=false, load=load, out=tmpReg8);

    Mux8Way16(a=tmpReg1, b=tmpReg2, c=tmpReg3, d=tmpReg4, e=tmpReg5, f=tmpReg6, g=tmpReg7, h=tmpReg8, sel=address, out=selRegister);
    Add16(a=selRegister, b=in, out=out);
}